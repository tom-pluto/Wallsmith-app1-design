@startuml
'https://plantuml.com/class-diagram

class ToDoEntry {
' a specific entry that shows up in the to-do lists

- String description
- String dueDate

+ getDescription(): String
+ setDescription(String): void
+ getDueDate(): String
+ setDueDate(String): void
+ getStatus(): boolean
+ setStatus(boolean): void

}

' originally planned to use a ToDoList to manage a list, but I think I'll just
' do this at runtime (see below)
'class ToDoList {
'' the to-do list
'
'- String title
'- List<ToDoEntry> entries
'
'+ getTitle(): String
'+ setTitle(String): String
'
'+ getEntry(int): ToDoEntry
'+ setEntry(int, ToDoEntry): void
'+ removeEntry(int): void
'
'+ getList(): List<ToDoEntry>
'
'}

'might implement this ToDoManger class later if it feels
'necessary
'class ToDoManager {
'
'   - int numToDoList
'   - List<ToDoList> list
'
'   + addToDoList(String): void
'   + removeToDoList(int): void
'   + getToDoLists(): List<ToDoList>
'
'}

class MenuController {

    + deleteCurrentList(): void
    + addList(): void
    + exitApp(): void
    + loadFromFile(): void
    + saveToFile(): void
    + showAbout(): void
    + initialize(): void

}

class Application {

    + main(args: String[]): void
    + start(stage: Stage): void

}

class TabController {

    - entryList: ObservableList<ToDoEntry>

    + addNewEntry(ActionEvent): void
    + deleteSelectedEntry(ActionEvent): void
    + initialize(): void

}

Application -- MenuController
MenuController -- TabController
TabController o-- ToDoEntry
@enduml